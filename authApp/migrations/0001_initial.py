# Generated by Django 4.0.4 on 2022-05-19 02:24

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('no_checkout', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_salida', models.DateTimeField(default=datetime.datetime(2022, 5, 19, 2, 24, 35, 331323, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('no_identificacion', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15)),
                ('correo', models.EmailField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('no_factura', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_factura', models.DateTimeField(default=datetime.datetime(2022, 5, 19, 2, 24, 35, 334324, tzinfo=utc))),
                ('precio_total', models.IntegerField()),
                ('checkout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.checkout')),
            ],
        ),
        migrations.CreateModel(
            name='Habitacion',
            fields=[
                ('no_habitacion', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('estado', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('cod_servicio', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('precio', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50)),
                ('nombre', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15)),
                ('estado', models.CharField(default='pendiente', max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='TipoHabitacion',
            fields=[
                ('tipo', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('caracteristicas', models.TextField(max_length=500)),
                ('precio', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Servicio_incluido',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('fecha_servicio', models.DateTimeField()),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.factura')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.servicio')),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('no_reserva', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_entrada', models.DateTimeField()),
                ('numero_dias', models.IntegerField()),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.cliente')),
                ('habitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.habitacion')),
            ],
        ),
        migrations.AddField(
            model_name='habitacion',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.tipohabitacion'),
        ),
        migrations.AddField(
            model_name='factura',
            name='reserva',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.reserva'),
        ),
        migrations.CreateModel(
            name='ClienteHabitual',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tipo_cliente', models.CharField(max_length=12)),
                ('descuento', models.IntegerField(null=True)),
                ('no_identificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.cliente')),
            ],
        ),
        migrations.AddField(
            model_name='checkout',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authApp.cliente'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True)),
                ('rol', models.CharField(max_length=20, verbose_name='Rol')),
                ('nombre', models.TextField(max_length=50, verbose_name='Nombre')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('telefono', models.CharField(max_length=15, verbose_name='Telefono')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
